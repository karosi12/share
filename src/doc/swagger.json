{
  "swagger": "2.0",
  "info": {
      "version": "1.0.0",
      "title": "Share",
      "description": "Config API Documentation",
      "license": {
          "name": "MIT",
          "url": "https://opensource.org/licenses/MIT"
      },
      "contact": {
          "Author": "Kayode Adeyemi"
      }
  },
  "host": "localhost:3030",
  "basePath": "/api",
  "tags": [
      {
        "name": "post"
      },
      {
        "name": "user"
      }
  ],
  "schemes": [
      "http",
      "https"
  ],
  "consumes": [
      "application/json"
  ],
  "produces": [
      "application/json"
  ],
  "paths": {
    "/post": {
        "post": {
            "tags": ["post"],
            "summary": "create a post",
            "description": "create a post",
            "parameters": [
                {
                    "name":"Authorization",
                    "in":"header",
                    "required":true,
                    "type":"string"
                },
                {
                    "name": "create a post",
                    "in": "body",
                    "description": "create a post",
                    "schema": {
                        "$ref": "#/definitions/post"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "post created successfully",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse201"
                    }
                },
                "400": {
                    "description": "unable to create post",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse400"
                    }
                },
                "401": {
                    "description": "Unauthorised access",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse401"
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse500"
                    }
                }
            }
        }
    },
    "/post/like": {
        "patch": {
            "tags": ["post"],
            "summary": "like a post",
            "description": "like a post",
            "parameters": [
                {
                    "name":"Authorization",
                    "in":"header",
                    "required":true,
                    "type":"string"
                },
                {
                    "name": "like",
                    "in": "body",
                    "description": "like a post",
                    "schema": {
                        "$ref": "#/definitions/subscribe"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "liked",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse"
                    }
                },
                "400": {
                    "description": "user like this post before",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse400"
                    }
                },
                "401": {
                    "description": "Unauthorised access",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse401"
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse500"
                    }
                }
            }
        }
    },
    "/post/undolike": {
        "patch": {
            "tags": ["post"],
            "summary": "undo post like",
            "description": "undo post like",
            "parameters": [
                {
                    "name":"Authorization",
                    "in":"header",
                    "required":true,
                    "type":"string"
                },
                {
                    "name": "undo",
                    "in": "body",
                    "description": "undo post like",
                    "schema": {
                        "$ref": "#/definitions/subscribe"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "undo like",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse"
                    }
                },
                "400": {
                    "description": "record not found",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse400"
                    }
                },
                "401": {
                    "description": "Unauthorised access",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse401"
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse500"
                    }
                }
            }
        }
    },
    "/post/comment": {
        "patch": {
            "tags": ["post"],
            "summary": "comment on a post",
            "description": "comment",
            "parameters": [
                {
                    "name":"Authorization",
                    "in":"header",
                    "required":true,
                    "type":"string"
                },
                {
                    "name": "comment",
                    "in": "body",
                    "description": "comment on a post",
                    "schema": {
                        "$ref": "#/definitions/comment"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "user comment was successful",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse201"
                    }
                },
                "400": {
                    "description": "record not found",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse400"
                    }
                },
                "401": {
                    "description": "Unauthorised access",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse401"
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse500"
                    }
                }
            }
        }
    },
    "/posts": {
        "get": {
            "tags": ["post"],
            "summary": "List post",
            "description": "Retrieved post record",
            "responses": {
                "200": {
                    "description": "Retrieved record",
                    "schema": {
                        "$ref": "#/definitions/ApiResponseList"
                    }
                },
                "400": {
                    "description": "unable to fetch record",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse400"
                    }
                },
                "401": {
                    "description": "Unauthorised access",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse401"
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse500"
                    }
                }
            }
        }
    },
    "/post/{id}": {
        "get": {
            "tags": ["post"],
            "summary": "Find a post",
            "description": "Find a post",
            "parameters": [
                {
                    "name":"Authorization",
                    "in":"header",
                    "required":true,
                    "description": "Authorizate user to get post",
                    "type":"string",
                    "schema": {
                        "$ref": "#/definitions/post"
                    }
                },
                {
                    "name":"id",
                    "in":"path",
                    "description":"ID of post to return",
                    "required":true,
                    "type":"string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Find a post",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse"
                    }
                },
                "400": {
                    "description": "unable to fetch record",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse400"
                    }
                },
                "401": {
                    "description": "Unauthorised access",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse401"
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse500"
                    }
                }
            }
        }
    },
    "/post/{postId}": {
        "put": {
            "tags": ["post"],
            "summary": "update a post",
            "description": "update a post",
            "parameters": [
                {
                    "name":"Authorization",
                    "in":"header",
                    "required":true,
                    "description": "Authorizate user to update a post",
                    "type":"string",
                    "schema": {
                        "$ref": "#/definitions/post"
                    }
                },
                {
                    "name":"postId",
                    "in":"path",
                    "description":"ID of post to return",
                    "required":true,
                    "type":"string"
                },
                {
                    "name": "post",
                    "in": "body",
                    "description": "update a post",
                    "schema": {
                        "$ref": "#/definitions/post"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Update a post",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse"
                    }
                },
                "400": {
                    "description": "unable to update record",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse400"
                    }
                },
                "401": {
                    "description": "Unauthorised access",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse401"
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse500"
                    }
                }
            }
        },
        "delete": {
            "tags": ["post"],
            "summary": "delete a post",
            "description": "Delete a post",
            "parameters": [
                {
                    "name":"Authorization",
                    "in":"header",
                    "required":true,
                    "description": "Authorizate user to delete post",
                    "type":"string",
                    "schema": {
                        "$ref": "#/definitions/post"
                    }
                },
                {
                    "name":"postId",
                    "in":"path",
                    "description":"ID of post to return",
                    "required":true,
                    "type":"string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Delete a post",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse"
                    }
                },
                "400": {
                    "description": "unable to delete record",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse400"
                    }
                },
                "401": {
                    "description": "Unauthorised access",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse401"
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse500"
                    }
                }
            }
        }
    },
    "/post/subscribe": {
        "patch": {
            "tags": ["post"],
            "summary": "Subscribe to a post",
            "description": "Subscribe to a post",
            "parameters": [
                {
                    "name":"Authorization",
                    "in":"header",
                    "required":true,
                    "description": "Authorizate user to subscribe to a post",
                    "type":"string",
                    "schema": {
                        "$ref": "#/definitions/subscribe"
                    }
                },
                {
                    "name":"subscribe",
                    "in":"body",
                    "required":true,
                    "description": "subscribe to a post",
                    "type":"number",
                    "schema": {
                        "$ref": "#/definitions/subscribe"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "user subscribed to this post",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse"
                    }
                },
                "400": {
                    "description": "unable to subscribe to a post",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse400"
                    }
                },
                "401": {
                    "description": "Unauthorised access",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse401"
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse500"
                    }
                }
            }
        }
    },
    "/login": {
          "post": {
              "tags": ["user"],
              "summary": "login user",
              "description": "As a registered user you should be able to login",
              "parameters": [
                  {
                      "name": "user login",
                      "in": "body",
                      "description": "Log user in",
                      "schema": {
                          "$ref": "#/definitions/login"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Logged in",
                      "schema": {
                          "$ref": "#/definitions/ApiResponse"
                      }
                  },
                  "400": {
                      "description": "unable to login user",
                      "schema": {
                          "$ref": "#/definitions/ApiResponse400"
                      }
                  },
                  "401": {
                      "description": "Unauthorised access",
                      "schema": {
                          "$ref": "#/definitions/ApiResponse401"
                      }
                  },
                  "500": {
                      "description": "Internal server error",
                      "schema": {
                          "$ref": "#/definitions/ApiResponse500"
                      }
                  }
              }
        }
    },
    "/signup": {
        "post": {
            "tags": ["user"],
            "summary": "sign up user",
            "description": "Sign up new user",
            "parameters": [
                {
                    "name": "user sign up",
                    "in": "body",
                    "description": "Sign up",
                    "schema": {
                        "$ref": "#/definitions/user"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Sign up",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse201"
                    }
                },
                "400": {
                    "description": "unable to login user",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse400"
                    }
                },
                "401": {
                    "description": "Unauthorised access",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse401"
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse500"
                    }
                }
            }
        }
    },
    "/user/{id}": {
        "get": {
            "tags": ["user"],
            "summary": "find user",
            "description": "find a user",
            "parameters": [
                {
                    "name":"Authorization",
                    "in":"header",
                    "required":true,
                    "type":"string"
                },
                {
                    "name":"id",
                    "in":"path",
                    "description":"ID of post to return",
                    "required":true,
                    "type":"string"
                }
            ],
            "responses": {
                "200": {
                    "description": "User",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse"
                    }
                },
                "400": {
                    "description": "unable to find a user",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse400"
                    }
                },
                "401": {
                    "description": "Unauthorised access",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse401"
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse500"
                    }
                }
            }
        }
    },
    "/users": {
        "get": {
            "tags": ["user"],
            "summary": "List users",
            "description": "list users",
            "parameters": [
                {
                    "name":"Authorization",
                    "in":"header",
                    "required":true,
                    "type":"string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Record retrieved",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse"
                    }
                },
                "400": {
                    "description": "unable to list users",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse400"
                    }
                },
                "401": {
                    "description": "Unauthorised access",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse401"
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse500"
                    }
                }
            }
        }
    },
    "/change_password": {
        "put": {
            "tags": ["user"],
            "summary": "Change user password",
            "description": "change password",
            "parameters": [
                {
                    "name":"Authorization",
                    "in":"header",
                    "required":true,
                    "type":"string"
                },
                {
                    "name": "change user password",
                    "in": "body",
                    "description": "Change password",
                    "schema": {
                        "$ref": "#/definitions/resetPassword"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Record retrieved",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse"
                    }
                },
                "400": {
                    "description": "unable to list users",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse400"
                    }
                },
                "401": {
                    "description": "Unauthorised access",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse401"
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "schema": {
                        "$ref": "#/definitions/ApiResponse500"
                    }
                }
            }
        }
    }
  },
  "securityDefinitions":{
      "api_key":{
         "type":"string",
         "name":"Authorization",
         "in":"header"
      }
   },
  "definitions": {
    "ApiResponseList":{
        "type":"object",
        "properties":{
            "success":{
                "type":"boolean"
            },
            "message":{
                "type":"string"
            },
            "statusCode":{
                "type":"number",
                "example": 200
            },
            "meta": {
                "type": "object"
            },
            "data": {
                "type":"array",
                "items": {
                    "type": "object"
                }
            }
        }
    },
    "ApiResponse":{
        "type":"object",
        "properties":{
            "success":{
                "type":"boolean"
            },
            "message":{
                "type":"string"
            },
            "statusCode":{
                "type":"number",
                "example": 200
            },
            "data": {
                "type": "object"
            }
        }
    },
    "ApiResponse201":{
        "type":"object",
        "properties":{
            "success":{
            "type":"boolean"
            },
            "message":{
            "type":"string"
            },
            "statusCode":{
            "type":"number",
            "example": 201
            },
            "data": {
                "type":"object"
            }
        }
    },
    "ApiResponse400":{
        "type":"object",
        "properties":{
            "error":{
            "type":"boolean",
            "example": true
            },
            "message":{
            "type":"string"
            },
            "statusCode":{
            "type":"number",
            "example": 400
            }
        }
    },
    "ApiResponse401":{
        "type":"object",
        "properties":{
        "error":{
            "type":"boolean",
            "example": true
        },
        "message":{
            "type":"string",
            "example": "Unauthorised access"
        },
        "statusCode":{
            "type":"number",
            "example": 401
        }
        }
    },
    "ApiResponse500":{
        "type":"object",
        "properties":{
            "error":{
            "type":"boolean",
            "example": true
            },
            "message":{
            "type":"string",
            "example": "Internal server error"
            },
            "statusCode":{
            "type":"number",
            "example": 500
            }
        }
    },
    "login": {
        "properties": {
            "email": {
                "type":"string"
            },
            "password": {
                "type": "string"
            }
        }
    },
    "user":{
        "type": "object",
        "properties": {
            "fullName": {
                "type": "string"
            },
            "email": {
                "type": "string"
            },
            "password": {
            "type": "string"
        }
        }
    },
    "post":{
        "type": "object",
        "properties": {
            "post": {
                "type": "string"
            }
        }
    },
    "subscribe":{
        "type": "object",
        "properties": {
            "postId": {
                "type": "string"
            }
        }
    },
    "comment":{
        "type": "object",
        "properties": {
            "postId": {
                "type": "string"
            },
            "comment": {
                "type": "string"
            }
        }
    },
    "resetPassword": {
        "type": "object",
        "properties": {
            "password": {
                "type": "string"
            },
            "email": {
                "type": "string"
            }
        } 
    }
  },
  "externalDocs": {
      "description": "Find out more about Swagger",
      "url": "http://swagger.io"
  }
}